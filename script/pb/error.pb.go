// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/base/error.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_None                        ErrorCode = 0
	ErrorCode_Unknown                     ErrorCode = 1
	ErrorCode_Success                     ErrorCode = 200
	ErrorCode_AccountStandard             ErrorCode = 201
	ErrorCode_PasswordStandard            ErrorCode = 202
	ErrorCode_MultipleLogin               ErrorCode = 203
	ErrorCode_NoneAccount                 ErrorCode = 204
	ErrorCode_WrongPassword               ErrorCode = 205
	ErrorCode_NoneUser                    ErrorCode = 206
	ErrorCode_CheckUser                   ErrorCode = 207
	ErrorCode_WrongIdNumber               ErrorCode = 208
	ErrorCode_ExpiredToken                ErrorCode = 209
	ErrorCode_SetTokenFail                ErrorCode = 210
	ErrorCode_TokenFail                   ErrorCode = 211
	ErrorCode_Replace                     ErrorCode = 212
	ErrorCode_RequestError                ErrorCode = 213
	ErrorCode_NoneData                    ErrorCode = 214
	ErrorCode_UpdateFail                  ErrorCode = 215
	ErrorCode_MatchFail                   ErrorCode = 216
	ErrorCode_UpBattleDeckFail            ErrorCode = 217
	ErrorCode_DelBattleDeckFail           ErrorCode = 218
	ErrorCode_DelItemFail                 ErrorCode = 219
	ErrorCode_QueryStaticFail             ErrorCode = 220
	ErrorCode_ScreenTime                  ErrorCode = 221
	ErrorCode_WrongPlayerNameFormat       ErrorCode = 222
	ErrorCode_ContainSensitiveWord        ErrorCode = 223
	ErrorCode_AlreadyGetWeekTaskReward    ErrorCode = 224
	ErrorCode_WeekTaskStageIdError        ErrorCode = 225
	ErrorCode_WeekTaskStageValError       ErrorCode = 226
	ErrorCode_WeekTaskAwardIdError        ErrorCode = 227
	ErrorCode_TaskCfgNotFound             ErrorCode = 228
	ErrorCode_TaskConditionError          ErrorCode = 229
	ErrorCode_TaskNotFound                ErrorCode = 230
	ErrorCode_TaskReachMax                ErrorCode = 231
	ErrorCode_ConfigError                 ErrorCode = 232
	ErrorCode_TaskAddError                ErrorCode = 233
	ErrorCode_SeasonNotOpen               ErrorCode = 234
	ErrorCode_ChapterNotOpen              ErrorCode = 235
	ErrorCode_ChapterRewardAlreadyGot     ErrorCode = 236
	ErrorCode_ChapterNotOpenCfgNotFound   ErrorCode = 237
	ErrorCode_FinishTaskNotEnough         ErrorCode = 238
	ErrorCode_TaskRewardAlreadyGot        ErrorCode = 239
	ErrorCode_UnlockSeniorPassCard        ErrorCode = 240
	ErrorCode_PassCardLvNotReach          ErrorCode = 241
	ErrorCode_SeasonAlreadyUnlockSenior   ErrorCode = 242
	ErrorCode_PassCardLvError             ErrorCode = 243
	ErrorCode_PassCardLvCfgError          ErrorCode = 244
	ErrorCode_AddPassCardExpError         ErrorCode = 245
	ErrorCode_ItemNotEnough               ErrorCode = 246
	ErrorCode_NotFindCardCfg              ErrorCode = 247
	ErrorCode_CfgNotFind                  ErrorCode = 248
	ErrorCode_CardEvolveCountMax          ErrorCode = 249
	ErrorCode_CanNotSetIconToCard         ErrorCode = 250
	ErrorCode_CardLvReachMax              ErrorCode = 251
	ErrorCode_CardLvError                 ErrorCode = 252
	ErrorCode_GiftExpired                 ErrorCode = 253
	ErrorCode_BuyCountLimit               ErrorCode = 254
	ErrorCode_WaitingForOrderCD           ErrorCode = 255
	ErrorCode_ModuleLoadingError          ErrorCode = 256
	ErrorCode_ModuleLoginError            ErrorCode = 257
	ErrorCode_AlreadyGetRankingReward     ErrorCode = 258
	ErrorCode_RankingNotReach             ErrorCode = 259
	ErrorCode_FunctionNotOpen             ErrorCode = 260
	ErrorCode_CanNotMatchWhenMatching     ErrorCode = 261
	ErrorCode_CanNotMatchWhenFighting     ErrorCode = 262
	ErrorCode_CanNotCancelWhenNotMatching ErrorCode = 263
	ErrorCode_ItemNotFind                 ErrorCode = 264
	ErrorCode_LotteryReachMaxNum          ErrorCode = 265
	ErrorCode_LotteryConditionError       ErrorCode = 266
	ErrorCode_ChannelNotSupported         ErrorCode = 267
	ErrorCode_InvalidChannelData          ErrorCode = 268
	ErrorCode_ThirdPartyBound             ErrorCode = 269
	ErrorCode_MailNotFind                 ErrorCode = 270
	ErrorCode_MailAlreadReceived          ErrorCode = 271
	ErrorCode_PlatformProductNotFound     ErrorCode = 272
)

var ErrorCode_name = map[int32]string{
	0:   "None",
	1:   "Unknown",
	200: "Success",
	201: "AccountStandard",
	202: "PasswordStandard",
	203: "MultipleLogin",
	204: "NoneAccount",
	205: "WrongPassword",
	206: "NoneUser",
	207: "CheckUser",
	208: "WrongIdNumber",
	209: "ExpiredToken",
	210: "SetTokenFail",
	211: "TokenFail",
	212: "Replace",
	213: "RequestError",
	214: "NoneData",
	215: "UpdateFail",
	216: "MatchFail",
	217: "UpBattleDeckFail",
	218: "DelBattleDeckFail",
	219: "DelItemFail",
	220: "QueryStaticFail",
	221: "ScreenTime",
	222: "WrongPlayerNameFormat",
	223: "ContainSensitiveWord",
	224: "AlreadyGetWeekTaskReward",
	225: "WeekTaskStageIdError",
	226: "WeekTaskStageValError",
	227: "WeekTaskAwardIdError",
	228: "TaskCfgNotFound",
	229: "TaskConditionError",
	230: "TaskNotFound",
	231: "TaskReachMax",
	232: "ConfigError",
	233: "TaskAddError",
	234: "SeasonNotOpen",
	235: "ChapterNotOpen",
	236: "ChapterRewardAlreadyGot",
	237: "ChapterNotOpenCfgNotFound",
	238: "FinishTaskNotEnough",
	239: "TaskRewardAlreadyGot",
	240: "UnlockSeniorPassCard",
	241: "PassCardLvNotReach",
	242: "SeasonAlreadyUnlockSenior",
	243: "PassCardLvError",
	244: "PassCardLvCfgError",
	245: "AddPassCardExpError",
	246: "ItemNotEnough",
	247: "NotFindCardCfg",
	248: "CfgNotFind",
	249: "CardEvolveCountMax",
	250: "CanNotSetIconToCard",
	251: "CardLvReachMax",
	252: "CardLvError",
	253: "GiftExpired",
	254: "BuyCountLimit",
	255: "WaitingForOrderCD",
	256: "ModuleLoadingError",
	257: "ModuleLoginError",
	258: "AlreadyGetRankingReward",
	259: "RankingNotReach",
	260: "FunctionNotOpen",
	261: "CanNotMatchWhenMatching",
	262: "CanNotMatchWhenFighting",
	263: "CanNotCancelWhenNotMatching",
	264: "ItemNotFind",
	265: "LotteryReachMaxNum",
	266: "LotteryConditionError",
	267: "ChannelNotSupported",
	268: "InvalidChannelData",
	269: "ThirdPartyBound",
	270: "MailNotFind",
	271: "MailAlreadReceived",
	272: "PlatformProductNotFound",
}

var ErrorCode_value = map[string]int32{
	"None":                        0,
	"Unknown":                     1,
	"Success":                     200,
	"AccountStandard":             201,
	"PasswordStandard":            202,
	"MultipleLogin":               203,
	"NoneAccount":                 204,
	"WrongPassword":               205,
	"NoneUser":                    206,
	"CheckUser":                   207,
	"WrongIdNumber":               208,
	"ExpiredToken":                209,
	"SetTokenFail":                210,
	"TokenFail":                   211,
	"Replace":                     212,
	"RequestError":                213,
	"NoneData":                    214,
	"UpdateFail":                  215,
	"MatchFail":                   216,
	"UpBattleDeckFail":            217,
	"DelBattleDeckFail":           218,
	"DelItemFail":                 219,
	"QueryStaticFail":             220,
	"ScreenTime":                  221,
	"WrongPlayerNameFormat":       222,
	"ContainSensitiveWord":        223,
	"AlreadyGetWeekTaskReward":    224,
	"WeekTaskStageIdError":        225,
	"WeekTaskStageValError":       226,
	"WeekTaskAwardIdError":        227,
	"TaskCfgNotFound":             228,
	"TaskConditionError":          229,
	"TaskNotFound":                230,
	"TaskReachMax":                231,
	"ConfigError":                 232,
	"TaskAddError":                233,
	"SeasonNotOpen":               234,
	"ChapterNotOpen":              235,
	"ChapterRewardAlreadyGot":     236,
	"ChapterNotOpenCfgNotFound":   237,
	"FinishTaskNotEnough":         238,
	"TaskRewardAlreadyGot":        239,
	"UnlockSeniorPassCard":        240,
	"PassCardLvNotReach":          241,
	"SeasonAlreadyUnlockSenior":   242,
	"PassCardLvError":             243,
	"PassCardLvCfgError":          244,
	"AddPassCardExpError":         245,
	"ItemNotEnough":               246,
	"NotFindCardCfg":              247,
	"CfgNotFind":                  248,
	"CardEvolveCountMax":          249,
	"CanNotSetIconToCard":         250,
	"CardLvReachMax":              251,
	"CardLvError":                 252,
	"GiftExpired":                 253,
	"BuyCountLimit":               254,
	"WaitingForOrderCD":           255,
	"ModuleLoadingError":          256,
	"ModuleLoginError":            257,
	"AlreadyGetRankingReward":     258,
	"RankingNotReach":             259,
	"FunctionNotOpen":             260,
	"CanNotMatchWhenMatching":     261,
	"CanNotMatchWhenFighting":     262,
	"CanNotCancelWhenNotMatching": 263,
	"ItemNotFind":                 264,
	"LotteryReachMaxNum":          265,
	"LotteryConditionError":       266,
	"ChannelNotSupported":         267,
	"InvalidChannelData":          268,
	"ThirdPartyBound":             269,
	"MailNotFind":                 270,
	"MailAlreadReceived":          271,
	"PlatformProductNotFound":     272,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2a5c92270530af17, []int{0}
}

func init() {
	proto.RegisterEnum("ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("proto/base/error.proto", fileDescriptor_2a5c92270530af17) }

var fileDescriptor_2a5c92270530af17 = []byte{
	// 1024 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x55, 0x47, 0x73, 0x1b, 0x47,
	0x13, 0xe5, 0xa0, 0xbe, 0xfa, 0x24, 0x8d, 0x44, 0x69, 0x34, 0xca, 0x0e, 0xb0, 0xcf, 0x3e, 0x90,
	0x07, 0xff, 0x02, 0x72, 0x49, 0xb0, 0x50, 0x45, 0x42, 0x34, 0x96, 0x34, 0xab, 0x7c, 0x1b, 0xee,
	0x34, 0x76, 0xa7, 0xb0, 0x98, 0x59, 0xcf, 0xce, 0x82, 0xc4, 0xcd, 0x39, 0x07, 0xdd, 0xfc, 0x97,
	0xe4, 0x4c, 0x67, 0x39, 0xcb, 0xa4, 0x73, 0xce, 0x39, 0xd5, 0xf4, 0xee, 0x02, 0x14, 0xcb, 0x37,
	0xcc, 0xeb, 0xee, 0xd7, 0xdd, 0xaf, 0xbb, 0x17, 0xf4, 0x6c, 0x66, 0x8d, 0x33, 0xb3, 0x9b, 0x22,
	0x87, 0x59, 0xb0, 0xd6, 0xd8, 0x19, 0x04, 0x6e, 0x79, 0x6a, 0x9a, 0x1e, 0x59, 0xf4, 0xef, 0xc0,
	0x48, 0xe0, 0x87, 0xe9, 0xff, 0x3a, 0x46, 0x03, 0x9b, 0xe2, 0x47, 0xe9, 0xa1, 0x75, 0xdd, 0xd7,
	0x66, 0x4b, 0x33, 0xc2, 0x8f, 0xd1, 0x43, 0x61, 0x11, 0x45, 0x90, 0xe7, 0xec, 0x32, 0xe1, 0xa7,
	0xe9, 0x89, 0xb9, 0x28, 0x32, 0x85, 0x76, 0xa1, 0x13, 0x5a, 0x0a, 0x2b, 0xd9, 0xd3, 0x84, 0x9f,
	0xa1, 0x6c, 0x55, 0xe4, 0xf9, 0x96, 0xb1, 0x72, 0x0c, 0x3f, 0x43, 0x38, 0xa7, 0xd3, 0x2b, 0x45,
	0xea, 0x54, 0x96, 0xc2, 0xb2, 0x89, 0x95, 0x66, 0xcf, 0x12, 0xce, 0xe8, 0x51, 0x9f, 0xa5, 0x22,
	0x61, 0xcf, 0xa1, 0xd7, 0x86, 0x35, 0x3a, 0xae, 0x19, 0xd8, 0xf3, 0x84, 0x4f, 0xd3, 0xc3, 0xde,
	0x6b, 0x3d, 0x07, 0xcb, 0x5e, 0x20, 0xfc, 0x38, 0x3d, 0x12, 0x24, 0x10, 0xf5, 0xf1, 0xfd, 0xe2,
	0x24, 0xa4, 0x2d, 0x3b, 0xc5, 0x60, 0x13, 0x2c, 0xdb, 0x21, 0xfc, 0x24, 0x3d, 0xb6, 0xb8, 0x9d,
	0x29, 0x0b, 0x72, 0xcd, 0xf4, 0x41, 0xb3, 0x97, 0x10, 0x0a, 0xc1, 0xe1, 0xb3, 0x25, 0x54, 0xca,
	0x5e, 0x46, 0xa6, 0xc9, 0xfb, 0x15, 0xec, 0xae, 0x0b, 0x59, 0x2a, 0x22, 0x60, 0xaf, 0x62, 0x40,
	0x17, 0xee, 0x2c, 0x20, 0x77, 0x28, 0x0b, 0x7b, 0x6d, 0x5c, 0xc9, 0x82, 0x70, 0x82, 0xbd, 0x4e,
	0xf8, 0x09, 0x4a, 0xd7, 0x33, 0x29, 0x1c, 0x20, 0xc1, 0x1b, 0x48, 0xb8, 0x22, 0x5c, 0x94, 0xe0,
	0xfb, 0x0a, 0x4a, 0xb1, 0x9e, 0xcd, 0x0b, 0xe7, 0x52, 0x58, 0x80, 0xa8, 0x8f, 0xf0, 0x9b, 0x84,
	0x9f, 0xa5, 0x27, 0x17, 0x20, 0x3d, 0x80, 0xbf, 0x85, 0x72, 0x2c, 0x40, 0xda, 0x76, 0x30, 0x40,
	0xe4, 0x6d, 0x54, 0xf8, 0xb6, 0x02, 0xec, 0x28, 0x74, 0xc2, 0xa9, 0x08, 0xd1, 0x77, 0x30, 0x6f,
	0x18, 0x59, 0x00, 0xbd, 0xa6, 0x06, 0xc0, 0xde, 0x25, 0xfc, 0x3a, 0x7a, 0xa6, 0x54, 0x2d, 0x15,
	0x23, 0xb0, 0x1d, 0x31, 0x80, 0x96, 0xb1, 0x03, 0xe1, 0xd8, 0x7b, 0x84, 0x5f, 0xa0, 0xa7, 0x03,
	0xa3, 0x9d, 0x50, 0x3a, 0x04, 0x9d, 0x2b, 0xa7, 0x86, 0xb0, 0xe1, 0x85, 0x7d, 0x9f, 0xf0, 0x1b,
	0xe9, 0xf9, 0xb9, 0xd4, 0x82, 0x90, 0xa3, 0x25, 0x70, 0x1b, 0x00, 0xfd, 0x35, 0x91, 0xf7, 0xbb,
	0xb0, 0xe5, 0x27, 0x76, 0x15, 0x23, 0x6b, 0x30, 0x74, 0x22, 0x86, 0xb6, 0x2c, 0x85, 0xf8, 0xa0,
	0x4c, 0xb8, 0xdf, 0x74, 0xbb, 0x48, 0x4b, 0xdb, 0xee, 0x35, 0x61, 0x73, 0x9e, 0xaa, 0x0e, 0xdb,
	0xc3, 0x76, 0x3c, 0x1c, 0xf4, 0xe2, 0x8e, 0x71, 0x2d, 0x53, 0x68, 0xc9, 0x3e, 0x24, 0xfc, 0x1c,
	0xe5, 0x88, 0x1a, 0x2d, 0x95, 0x53, 0x46, 0x97, 0xee, 0x1f, 0xe1, 0x04, 0xbc, 0x61, 0xec, 0xfb,
	0xf1, 0x18, 0xea, 0x82, 0x88, 0x92, 0x15, 0xb1, 0xcd, 0x3e, 0x41, 0xd5, 0x02, 0xa3, 0x7b, 0x2a,
	0x2e, 0xe3, 0x3e, 0x1d, 0x3b, 0xcd, 0xc9, 0x2a, 0xf3, 0x67, 0xb8, 0x24, 0x21, 0x88, 0xdc, 0xe8,
	0x8e, 0x71, 0x17, 0x33, 0xd0, 0xec, 0x73, 0xc2, 0x4f, 0xd1, 0xe3, 0x41, 0x22, 0x32, 0x07, 0xb6,
	0x06, 0xbf, 0x20, 0xfc, 0x06, 0x7a, 0xae, 0x02, 0x4b, 0x21, 0x6a, 0x81, 0x8c, 0x63, 0x5f, 0x12,
	0xde, 0xa4, 0x17, 0xae, 0x0d, 0xd9, 0xdf, 0xca, 0x57, 0x84, 0x9f, 0xa7, 0xa7, 0x5a, 0x4a, 0xab,
	0x3c, 0xa9, 0xea, 0x5e, 0xd4, 0xa6, 0x88, 0x13, 0xf6, 0x35, 0xaa, 0x32, 0x51, 0x77, 0x1f, 0xe9,
	0x37, 0x68, 0x5a, 0xd7, 0xa9, 0x89, 0xfa, 0x21, 0x68, 0x65, 0xac, 0x5f, 0xfd, 0xc0, 0x8f, 0xe0,
	0x5b, 0x94, 0xa6, 0x7e, 0x2e, 0x0f, 0x3b, 0xc6, 0x61, 0xdf, 0xec, 0x3b, 0x2c, 0xa4, 0xec, 0xa7,
	0xa2, 0xda, 0x4f, 0xc0, 0xbe, 0x47, 0xa5, 0x27, 0x81, 0xa5, 0x0a, 0x3f, 0x1c, 0xa0, 0x0b, 0x7a,
	0x95, 0x62, 0x3f, 0x62, 0xdd, 0x73, 0x52, 0xd6, 0xb6, 0xc5, 0xed, 0xac, 0xb4, 0xfc, 0x84, 0xc2,
	0xf9, 0x85, 0x9c, 0xf4, 0xf2, 0x33, 0x0a, 0xe7, 0x9b, 0x56, 0x5a, 0x7a, 0xef, 0xa0, 0x17, 0xb3,
	0x5f, 0x70, 0x29, 0x2b, 0x31, 0x94, 0x96, 0xec, 0x57, 0x4c, 0x86, 0x64, 0x43, 0x93, 0x0e, 0x21,
	0xf0, 0x07, 0xee, 0x07, 0xf6, 0x1b, 0x26, 0x0b, 0x84, 0x1f, 0x44, 0x08, 0xae, 0x1d, 0x19, 0xbd,
	0x66, 0xb0, 0xdd, 0xdf, 0xcb, 0x89, 0x60, 0x6d, 0xe3, 0xf9, 0xfe, 0x51, 0xce, 0x77, 0x5f, 0x1b,
	0x7f, 0x22, 0xb2, 0xa4, 0x7a, 0xae, 0xba, 0x70, 0xf6, 0x17, 0x56, 0x39, 0x5f, 0x8c, 0x30, 0xc9,
	0xb2, 0x1a, 0x28, 0xc7, 0xfe, 0xc6, 0x2b, 0xdb, 0x10, 0xca, 0x29, 0x1d, 0xb7, 0x8c, 0xbd, 0x68,
	0x25, 0xd8, 0x60, 0x81, 0xfd, 0x83, 0x75, 0xad, 0x18, 0x59, 0xf8, 0xcf, 0x90, 0x90, 0x4a, 0x57,
	0x22, 0xdc, 0xd5, 0xf0, 0xd7, 0x5a, 0x1b, 0x62, 0x55, 0x6d, 0xe1, 0xdd, 0x0d, 0xbf, 0x11, 0x93,
	0x2b, 0xe9, 0x0a, 0xdd, 0x57, 0x3a, 0xae, 0x8e, 0xe4, 0x9e, 0x86, 0x17, 0xba, 0xc2, 0xc6, 0xe3,
	0xb9, 0x17, 0xd1, 0x56, 0xa1, 0x23, 0xbf, 0xcd, 0xf5, 0x6e, 0xdd, 0x87, 0x4c, 0x65, 0xe3, 0xf8,
	0x91, 0xd8, 0x48, 0x40, 0xe3, 0x0f, 0xa5, 0x63, 0x76, 0xff, 0x7f, 0x59, 0x5b, 0x2a, 0x4e, 0x7c,
	0xfd, 0xec, 0x81, 0x06, 0xbf, 0x99, 0x5e, 0x5f, 0x5a, 0x03, 0xa1, 0x23, 0x48, 0xbd, 0xb9, 0x76,
	0xf5, 0x1e, 0x0f, 0x36, 0xbc, 0x2a, 0xd5, 0xa4, 0x70, 0x02, 0x0f, 0x35, 0x7c, 0xa7, 0xcb, 0xc6,
	0x39, 0xb0, 0xa3, 0x5a, 0xcf, 0x4e, 0x31, 0x60, 0x0f, 0x37, 0xfc, 0xf9, 0x56, 0x86, 0x03, 0x47,
	0xf7, 0x48, 0x03, 0xa7, 0x93, 0x08, 0xad, 0x21, 0xf5, 0x13, 0x2a, 0xb2, 0xcc, 0x58, 0x07, 0x92,
	0x3d, 0x8a, 0x74, 0x6d, 0x3d, 0x14, 0xa9, 0x92, 0x95, 0x03, 0x7e, 0x07, 0x1f, 0xc3, 0x6e, 0xd7,
	0x12, 0x65, 0xe5, 0xaa, 0xb0, 0x6e, 0x34, 0x8f, 0xb7, 0xf0, 0x38, 0xd6, 0xb3, 0x22, 0x54, 0x5a,
	0xd7, 0xf3, 0x04, 0x12, 0x78, 0xa4, 0x54, 0xb3, 0x0b, 0x11, 0xa8, 0x21, 0x48, 0xf6, 0x24, 0xb6,
	0xbe, 0x9a, 0x0a, 0xd7, 0x33, 0x76, 0xb0, 0x6a, 0x8d, 0x2c, 0x22, 0x37, 0x3e, 0xaa, 0x4b, 0x8d,
	0xf9, 0xf6, 0xe5, 0xdd, 0x26, 0xd9, 0xd9, 0x6d, 0x92, 0xab, 0xbb, 0x4d, 0x72, 0x69, 0xaf, 0x39,
	0xb5, 0xb3, 0xd7, 0x9c, 0xba, 0xb2, 0xd7, 0x9c, 0xa2, 0x37, 0x45, 0x66, 0x30, 0x93, 0x27, 0x45,
	0x2e, 0x74, 0x3c, 0xe3, 0xa2, 0xb8, 0xfc, 0x2b, 0x8b, 0x4c, 0x3a, 0x13, 0xa5, 0x0a, 0xb4, 0x5b,
	0x25, 0x77, 0x1c, 0x0b, 0x82, 0xa5, 0x10, 0xec, 0x10, 0xec, 0x6c, 0xb6, 0xb9, 0xf9, 0x7f, 0x74,
	0xb8, 0xf5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf6, 0xf0, 0x93, 0xee, 0x05, 0x07, 0x00, 0x00,
}
